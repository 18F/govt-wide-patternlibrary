// Variables

// Size icons based on the theme-type-scale-[size] number and this factor
$icon-list-icon-size-factor: 1.5;
// Center the icon to the title text, works for all size variants
$icon-list-icon-margin-top: -1.5%;
// Fine tune the space between the icon and content with this factor
$icon-list-icon-padding-left-factor: 0.4;
// Fine tune the title top padding given a line height of 2
$icon-list-title-padding-top: 0.2em;

$icon-list-font-sizes: (
  "xs" $theme-type-scale-xs,
  "sm" $theme-type-scale-sm,
  "md" $theme-type-scale-md,
  "lg" $theme-type-scale-lg,
  "xl" $theme-type-scale-xl,
  "2xl" $theme-type-scale-2xl,
  "3xl" $theme-type-scale-3xl
);

$type-scale: font-size($theme-icon-list-font-family, $theme-body-font-size);

@include override-prose {
  .usa-icon-list {
    @include typeset($theme-icon-list-font-family);
    @include unstyled-list;
    @include u-measure(5);
  }

  .usa-icon-list__item {
    display: flex;
    font-size: size($theme-icon-list-font-family, $theme-icon-list-font-size);
    position: relative;

    & + .usa-icon-list__item {
      padding-top: units(1.5);
    }
  }
}

// Allow setting icon color on the icon-list element
.usa-icon-list {
  @each $color, $grades in $all-project-colors {
    @each $grade, $value in $grades {
      @if $value {
        $prefix: if($grade != "default", #{$color}-#{$grade}, #{$color});
        &--#{$prefix} {
          .usa-icon-list__icon {
            color: color($prefix);
          }
        }
      }
    }
  }
}

.usa-icon-list__icon {
  .usa-icon {
    // Set the height and width of the icon based on the size variant and factor
    display: block;
    height: $type-scale * $icon-list-icon-size-factor;
    margin-top: $icon-list-icon-margin-top;
    position: relative;
    width: $type-scale * $icon-list-icon-size-factor;
  }
}

// Generate responsive variants
// Create a map for looping that includes a default or no-breakpoint version
$this-null: (
  "none": null,
);
$icon-list-breakpoints: map-merge($this-null, $system-breakpoints);
@each $mq-key, $mq-value in $icon-list-breakpoints {
  @each $token, $val in $icon-list-font-sizes {
    // Set the prefix
    // An empty string if "none"
    $prefix: false;
    @if $mq-key == "none" {
      $prefix: "";
    }
    // Or the standard prefix if the breakpoint is output
    @else if map-get($theme-utility-breakpoints, $mq-key) {
      $prefix: "#{$mq-key}\\:";
    }
    @if $prefix {
      $this-type-scale: font-size("body", $token);
      @include at-media($mq-key) {
        .#{$prefix}usa-icon-list--size-#{$token} {
          .usa-icon-list__icon {
            .usa-icon {
              // Set the height and width of the icon based on the size variant and factor
              height: $this-type-scale * $icon-list-icon-size-factor;
              margin-top: $icon-list-icon-margin-top;
              width: $this-type-scale * $icon-list-icon-size-factor;
            }
          }

          .usa-icon-list__content {
            // Resize simple (un-marked up) content
            font-size: size("body", $token);
            // Calculate the space between the icon and content based on the size variant and factor
            padding-left: $this-type-scale * $icon-list-icon-padding-left-factor;

            // But don't resize any block-level element inside content
            > p,
            > h2,
            > h3,
            > h4,
            > h5,
            > h6,
            > ul,
            > ol,
            > div {
              font-size: initial;
            }

            .usa-icon-list__title {
              font-size: size("heading", $token);
            }
          }
        }
      }
    }
  }
}

.usa-icon-list__title {
  @include typeset(
    "heading",
    $theme-body-font-size,
    $theme-heading-line-height
  );
  margin-bottom: units(0);
  padding-top: $icon-list-title-padding-top;
  & + * {
    margin-top: units(1);
  }
}

.usa-icon-list__content {
  font-size: $type-scale;
  padding-left: $type-scale * $icon-list-icon-padding-left-factor;
  > *:first-child {
    margin-top: 0;
  }
  > *:last-child {
    margin-bottom: 0;
  }

  ul li {
    list-style-type: disc;
  }
}

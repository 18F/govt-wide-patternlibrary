$this-icon: "foo";
$this-icon-aspect: (64, 39);
$this-icon-colors: get-link-colors-from-bg(
  $theme-banner-background-color,
  $theme-banner-link-color
);
$this-icon-color: nth($this-icon-colors, 1);
$this-icon-hover: nth($this-icon-colors, 2);
$this-icon-height: 0.8ex;

@mixin add-color-icon(
  $image-name,
  $dim,
  $icon-height,
  $container-height: null,
  $container-width: null,
  $color,
  $color-hover: null,
  $rotate: null,
  $path: $theme-image-path
) {
  $aspect: nth($dim, 1) / nth($dim, 2);
  background-color: color($color);
  display: inline-block;
  mask: url("#{$path}/#{$image-name}") no-repeat center;
  mask-size: ($icon-height * $aspect) $icon-height;
  @if $color-hover {
    &:hover {
      background-color: color($color-hover);
    }
  }
  height: units($container-height);
  width: units($container-width);
  @if $rotate {
    transform: rotate($rotate);
  }
}

@mixin place-icon(
  $direction: null,
  $margin: null,
  $vertical-align: null,
  $image-name: null,
  $dim: null,
  $icon-height: null,
  $container-height: null,
  $container-width: null,
  $color: null,
  $color-hover: null,
  $rotate: null,
  $path: $theme-image-path
) {
  @if type-of($image-name) == "list" {
    $items: $image-name;
    $image-name: nth($items, 1);
    @if length($items) > 1 {
      $dim: nth($items, 2);
      @if length($items) > 2 {
        $icon-height: nth($items, 3);
        @if length($items) > 3 {
          $container-height: nth($items, 4);
          @if length($items) > 4 {
            $container-width: nth($items, 5);
            @if length($items) > 5 {
              $color: nth($items, 6);
              @if length($items) > 6 {
                $color-hover: nth($items, 7);
                @if length($items) > 7 {
                  $rotate: nth($items, 8);
                }
              }
            }
          }
        }
      }
    }
  }
  &::#{$direction} {
    @include add-color-icon(
      $image-name,
      $dim,
      $icon-height,
      $container-height,
      $container-width,
      $color,
      $color-hover,
      $rotate,
      $path
    );
    content: "";
    vertical-align: $vertical-align;

    @if $direction == "after" {
      margin-left: units($margin);
    } @else {
      margin-right: units($margin);
    }
  }

  @if $color-hover {
    &:hover::#{$direction} {
      content: ""; // Added to address a weird display bug
      background-color: color($color-hover);
    }
  }
}

.usa-banner {
  @include typeset($theme-banner-font-family);
  @include border-box-sizing;
  background-color: color($theme-banner-background-color);

  @include at-media("tablet") {
    font-size: font-size($theme-banner-font-family, "3xs");
    padding-bottom: units(0);
  }

  .usa-accordion {
    @include typeset($theme-banner-font-family);
  }
}

.usa-banner__header,
.usa-banner__content {
  @include set-text-from-bg($theme-banner-background-color);
}

.usa-banner__content {
  @include grid-container($theme-banner-max-width);
  @include add-responsive-site-margins;
  background-color: color("transparent");
  font-size: font-size($theme-banner-font-family, 4);
  overflow: hidden;
  padding-bottom: units(2);
  padding-left: units($theme-site-margins-mobile-width - 1);
  padding-top: units(0.5);
  width: 100%;

  @include at-media("tablet") {
    @include u-padding-y(3);
  }

  p {
    &:first-child {
      margin: 0;
    }
  }
}

.usa-banner__guidance {
  @include u-display("flex");
  @include u-flex("align-start");
  padding-top: units(2);

  @include at-media("tablet") {
    padding-top: units(0);
  }
}

.usa-banner__lock-image {
  $lock-h: 64; // unitless height of svg
  $lock-w: 52; // unitless width of svg
  $lock-aspect: $lock-w / $lock-h;
  $icon-height: 1.5ex; // height of the lock icon; use ex for resilience

  height: $icon-height;
  width: $icon-height * $lock-aspect;
  path {
    fill: currentColor;
  }
}

.usa-banner__inner {
  @include add-responsive-site-margins;
  @include grid-container($theme-banner-max-width);
  @include grid-row;
  @include u-flex("align-start");
  padding-right: units(0);

  @include at-media("tablet") {
    @include u-flex("align-center");
  }
}

.usa-banner__header {
  @include u-padding-y(1);
  font-size: font-size($theme-banner-font-family, 1);
  font-weight: font-weight("normal");
  min-height: units($size-touch-target);
  position: relative;

  @include at-media("tablet") {
    @include u-padding-y(0.5);
    min-height: 0;
  }
}

.usa-banner__header-text {
  @include u-margin-y(0);
  font-size: font-size($theme-banner-font-family, 1);
  line-height: line-height($theme-banner-font-family, 2);
}

$icon-chevron: (
  "angle-arrow-down-primary.svg",
  (64, 39),
  0.8ex,
  1,
  1,
  $this-icon-color,
  $this-icon-hover
);

$icon-chevron-up: append($icon-chevron, 180deg);

.usa-banner__header-action {
  @include place-icon("after", 2px, middle, $icon-chevron);
  @include set-link-from-bg(
    $theme-banner-background-color,
    $theme-banner-link-color
  );

  line-height: line-height($theme-banner-font-family, 2);
  margin-bottom: units(0);
  margin-top: units(2px);
  text-decoration: underline;

  .usa-banner__header--expanded & {
    display: none;
  }

  @include at-media("tablet") {
    display: none;
  }
}

.usa-banner__header-flag {
  @include u-float("left");
  margin-right: units(1);
  width: units(2);

  @include at-media("tablet") {
    margin-right: units(1);
    padding-top: units(0);
  }
}

.usa-banner__header--expanded {
  padding-right: units($size-touch-target + 1);

  @include at-media("tablet") {
    background-color: transparent;
    display: block;
    font-size: font-size($theme-banner-font-family, 1);
    font-weight: font-weight("normal");
    min-height: units(0);
    padding-right: units(0);
  }

  .usa-banner__inner {
    margin-left: units(0);

    @include at-media("tablet") {
      margin-left: units(auto);
    }
  }

  .usa-banner__header-action {
    display: none;
  }
}

.usa-banner__button {
  @include button-unstyled;
  @include u-pin("left");
  @include u-pin("y");
  @include u-text("primary", underline, baseline);
  @include set-link-from-bg(
    $theme-banner-background-color,
    $theme-banner-link-color
  );
  display: block;
  font-size: font-size($theme-banner-font-family, 1);
  height: auto;
  line-height: line-height($theme-banner-font-family, 2);
  padding-top: units(0);
  padding-left: units(0);
  text-decoration: none;
  width: auto;

  @include at-media-max("tablet") {
    width: 100%;
  }

  @include at-media("tablet") {
    @include place-icon("after", 2px, middle, $icon-chevron);
    @include set-link-from-bg(
      $theme-banner-background-color,
      $theme-banner-link-color
    );
    @include u-pin("none");
    display: inline;
    margin-left: units(1);
    position: relative;

    &:hover {
      // Underline added to inner text instead.
      text-decoration: none;
    }
  }

  &[aria-expanded="false"] {
    background-image: none;
  }

  &[aria-expanded="true"] {
    background-image: none;

    @include at-media-max("tablet") {
      @include place-icon(
        "after",
        0,
        middle,
        "close-blue-60v-alt.svg",
        (40, 40),
        $theme-icon-image-size,
        $size-touch-target,
        $size-touch-target,
        "blue-60v"
      );

      &::before {
        @include u-pin("y");
        @include u-pin("right");
        background-color: color("base-lighter");
        content: "";
        display: block;
        height: units($size-touch-target);
        width: units($size-touch-target);
      }
      &::after {
        @include u-pin("y");
        @include u-pin("right");
      }
    }

    @include at-media("tablet") {
      @include place-icon("after", 2px, middle, $icon-chevron-up);
      height: auto;
      padding: units(0);
      position: relative;
    }
  }
}

.usa-banner__button-text {
  @include add-sr-only;
  text-decoration: underline;

  @include at-media("tablet") {
    @include add-no-sr-only;
    display: inline;
  }
}

.usa-banner__icon {
  width: units(5);
}

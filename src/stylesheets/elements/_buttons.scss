// Buttons variables

$button-context: "Button";
$button-stroke: inset 0 0 0 units($theme-button-stroke-width);

// Buttons

.usa-button {
  @include border-box-sizing;
  @include typeset($theme-button-font-family, null, 1);
  @include set-text-and-bg("primary", $context: $button-context);
  appearance: none;
  border: 0;
  border-radius: radius($theme-button-border-radius);
  cursor: pointer;
  display: inline-block;
  font-weight: font-weight("bold");
  margin-right: units(1);
  padding: units(1.5) units(2.5);
  text-align: center;
  text-decoration: none;
  width: 100%;

  @include at-media("mobile-lg") {
    width: auto;
  }

  &:visited {
    color: color("white");
  }

  &:hover,
  &.usa-button--hover {
    @include set-text-and-bg("primary-dark", $context: $button-context);
    border-bottom: 0;
    text-decoration: none;
  }

  &:active,
  &.usa-button--active {
    @include set-text-and-bg("primary-darker", $context: $button-context);
  }

  &:not([disabled]):focus,
  &:not([disabled]).usa-focus {
    outline-offset: units(0.5);
  }

  &:disabled {
    @include button-disabled;
  }
}

@each $color, $tokens in $all-project-colors {
  @if $color != "disabled" and $color != "emergency" {
    $hover-color: next-token($color, "darker");
    $active-color: next-token($hover-color, "darker");

    .usa-button--#{$color}:not(.usa-button--unstyled) {
      @include set-text-and-bg($color, $context: $button-context);

      &:visited {
        @include set-text-and-bg($color, $context: $button-context);
      }

      &:hover,
      &.usa-button--hover {
        @include set-text-and-bg($hover-color, $context: $button-context);
      }

      &:active,
      &.usa-button--active {
        @include set-text-and-bg($hover-color, $context: $button-context);
      }
    }

    .usa-button--outline.usa-button--#{$color}:not(.usa-button--unstyled) {
      color: color($color);
      box-shadow: $button-stroke color($color);
      background-color: color("transparent");

      &:visited {
        color: color($color);
        box-shadow: $button-stroke currentColor;
      }

      &:hover,
      &.usa-button--hover {
        background-color: color("transparent");
        box-shadow: $button-stroke color($hover-color);
        color: color($hover-color);
      }

      &:active,
      &.usa-button--active {
        background-color: color("transparent");
        box-shadow: $button-stroke color($active-color);
        color: color($active-color);
      }
    }
  }
}

.usa-button.usa-button--outline.usa-button--inverse {
  $button-inverse-color: $theme-link-reverse-color;
  $button-inverse-hover-color: $theme-link-reverse-hover-color;
  $button-inverse-active-color: $theme-link-reverse-active-color;

  background-color: transparent;
  box-shadow: $button-stroke color("base-lighter");
  color: color($button-inverse-color);

  &:visited {
    color: color($button-inverse-color);
  }

  &:hover,
  &.usa-button--hover {
    box-shadow: $button-stroke color($button-inverse-hover-color);
    color: color($button-inverse-hover-color);
  }

  &:active,
  &.usa-button--active {
    background-color: transparent;
    box-shadow: $button-stroke color($button-inverse-active-color);
    color: color($button-inverse-active-color);
  }

  &.usa-button--unstyled {
    @include button-unstyled;
    color: color($button-inverse-color);

    &:visited {
      color: color($button-inverse-color);
    }

    &:hover,
    &.usa-button--hover {
      color: color($button-inverse-hover-color);
    }

    &:active,
    &.usa-button--active {
      color: color($button-inverse-active-color);
    }
  }
}

.usa-button--big {
  border-radius: radius($theme-button-border-radius);
  font-size: font-size($theme-button-font-family, "lg");
  padding: units(2) units(3);
}

.usa-button--disabled {
  @include button-disabled;
}

.usa-button--outline-disabled,
.usa-button--outline-inverse-disabled,
.usa-button--outline:disabled,
.usa-button--outline-inverse:disabled,
.usa-button--outline-inverse:disabled {
  background-color: color("transparent");

  &:hover,
  &.usa-button--hover,
  &:active,
  &.usa-button--active,
  &:focus,
  &.usa-focus {
    background-color: color("transparent");
    border: 0;
  }
}

.usa-button--outline-disabled,
.usa-button--outline:disabled {
  box-shadow: $button-stroke color("disabled");
  color: color("disabled");
  &.usa-button--inverse {
    background-color: transparent;
    box-shadow: $button-stroke color("base");
    color: color("base");
  }
}

.usa-button--unstyled {
  @include button-unstyled;
}

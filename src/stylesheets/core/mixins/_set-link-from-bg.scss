@function get-link-colors-from-bg(
  $bg-color,
  $preferred-link-color: $theme-link-color,
  $fallback-link-color: $theme-link-reverse-color,
  $wcag-target: "AA"
) {
  $magic-numbers: (
    "AA": 50,
    "AAA": 70,
    "AA-large": 40
  );
  $grade-step: 10;
  @if $preferred-link-color == default {
    $preferred-link-color: $theme-link-color;
  }

  $target-magic-number: map-get($magic-numbers, $wcag-target);
  $bg-grade: get-color-grade($bg-color);
  $our-color-tokens: ($preferred-link-color, $fallback-link-color);

  $link-token: false;
  $hover-token: false;

  @each $color-token in $our-color-tokens {
    // Decompose the link token and calculate grade
    $decomposed: decompose($color-token);
    $link-grade: if(nth($decomposed, 2) < 10, 0, nth($decomposed, 2));
    $link-magic-number: abs($bg-grade - $link-grade);

    @if $link-grade == 0 {
      @warn 'Tokens with grades less than 10 (including "white") aren\'t valid link color tokens, since they have no lighter hover states.';
    } @else if $link-grade == 100 {
      @warn '"black" isn\'t a valid link color token, since it has no darker hover state.';
    }

    // Check that link meets contrast target
    @else if $link-magic-number >= $target-magic-number {
      // Calculate additional link properties
      $link-family: nth($decomposed, 1);
      $link-vivid: "";
      @if nth($decomposed, 3) {
        $link-vivid: "v";
      }

      $link-token: $color-token;

      // If link is darker than bg, use darker hover
      // Exlude black as it has no darker hover
      @if ($link-grade > $bg-grade) and ($link-grade != 100) {
        $hover-grade: $link-grade + $grade-step;
        $hover-vivid: if($hover-grade == 90, "", $link-vivid);
        $hover-token: if(
          $hover-grade == 100,
          "black",
          #{$link-family}-#{$hover-grade}#{$hover-vivid}
        );
      }

      // If link is lighter than bg, use lighter hover
      // Exlude white equivalents as they have no lighter hover
      @else if ($link-grade != 0) and ($link-grade != 100) {
        $hover-grade: $link-grade - $grade-step;
        $hover-token: if(
          $hover-grade == 0,
          "white",
          #{$link-family}-#{$hover-grade}#{$link-vivid}
        );
      }
    }
  }

  @if not $hover-token {
    @error 'Neither "#{$preferred-link-color}" nor "#{$fallback-link-color}" can be #{$wcag-target} contrast links and hovers on a "#{$bg-color}" background.';
  }

  @return $link-token, $hover-token;
}

@mixin set-link-from-bg(
  $bg-color,
  $preferred-link-color: $theme-link-color,
  $fallback-link-color: $theme-link-reverse-color,
  $wcag-target: "AA"
) {
  $link-tokens: get-link-colors-from-bg(
    $bg-color,
    $preferred-link-color,
    $fallback-link-color,
    $wcag-target
  );

  $link-token: nth($link-tokens, 1);
  $hover-token: nth($link-tokens, 2);

  color: color($link-token);
  &:hover,
  &:active {
    color: color($hover-token);
  }
}

@function use-important($props...) {
  $this-length: length($props);
  $this-last: null;
  @if $this-length != 0 {
    $this-last: nth($props, $this-length);
  }
  @return $this-last;
}

@mixin grid-container($props...) {
  @include u-margin-x(auto);
  @if length($props) == 0 {
    @include u-maxw(desktop);
  }
  @else {
    $props: smart-quote(nth($props, 1));
    @include u-maxw($props);
  }
}

@mixin grid-row($props...) {
  @include u-display(flex);
  @include u-flex(wrap);
}

@mixin grid-gap($props...) {
  @if length($props) == 0 {
    $props: $theme-column-gap;
  }
  @else {
    $props: smart-quote(nth($props, 1));
  }
  @if $props == 0 {
    @include u-margin-x(0);

    > * {
      @include u-padding-y(0);
    }
  }
  @else {
    @if map-has-key($project-column-gaps, $props) {
      $props: map-get($project-column-gaps, $props);
    }
    @include u-margin-x(unquote("#{$neg-prefix}-#{calc-gap-offset($props)}"));
    > * {
      @include u-padding-x(calc-gap-offset($props));
    }
  }
}

@mixin grid-col($props...) {
  @if length($props) == 0 {
    @include u-flex(fill);
    @include u-width(auto);
  }
  @else {
    $props: smart-quote(nth($props, 1));
    @if $props == 'auto' {
      @include u-flex(auto);
      @include u-width(auto);
    }
    @elseif $props == 'fill' {
      @include u-flex(fill);
      @include u-width(auto);
    }
    @elseif not map-has-key($uswds-layout-grid-widths, $props) {
      @error "#{$props} is not a valid layout grid width. Valid width are #{map-keys($uswds-layout-grid-widths)}";
    }
    @else {
      $width: map-get($uswds-layout-grid-widths, $props);
      @include u-width(override, $width);
      @include u-flex(auto);
    }
  }
}

@mixin grid-offset($props) {
  $props: smart-quote($props);
  @if not map-has-key($uswds-layout-grid-widths, $props) {
    @error "#{$props} is not a valid layout grid width. Valid width are #{map-keys($uswds-layout-grid-widths)}";
  }
  @else {
    $width: map-get($uswds-layout-grid-widths, $props);
    @include u-margin-left(override, $width);
  }
}

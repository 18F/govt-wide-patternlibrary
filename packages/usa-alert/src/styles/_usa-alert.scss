@use "sass:math";

@use "uswds-core" as *;

// Alert variables ---------- //
$alert-icons: (
  success: "check_circle",
  warning: "warning",
  error: "error",
  info: "info",
  emergency: "error",
);

.usa-alert {
  @include alert-styles;

  * + & {
    margin-top: units(2);
  }

  .usa-alert__body {
    @if $theme-alert-align-with-site-alert == true {
      padding-left: $site-alert-alignment;
    }

    &:before {
      @include at-media($theme-site-margins-breakpoint) {
        @if $theme-alert-align-with-site-alert == true {
          left: $site-alert-alignment;
        } @else {
          left: units($theme-alert-padding-x);
        }
      }
    }
  }
}

@each $name, $icon in $alert-icons {
  .usa-alert--#{$name} {
    @include alert-status-wrapper-styles($name);

    .usa-alert__body {
      @include alert-status-body-styles($name, $icon);
    }

    .usa-alert__heading,
    .usa-alert__text {
      @if $theme-alert-align-with-site-alert == true {
        padding-left: calc(units($theme-alert-icon-size) + $alert-icon-gap);
      } @else {
        padding-left: calc(
          units($theme-alert-icon-size) +
            $alert-icon-gap +
            units($theme-alert-padding-x)
        );
      }
    }
  }
}

.usa-alert--slim {
  @include alert-styles-slim;
  .usa-alert__heading,
  .usa-alert__text {
    @if $theme-alert-align-with-site-alert == true {
      padding-left: calc($alert-slim-icon-size + $alert-icon-gap);
    } @else {
      padding-left: calc(
        $alert-slim-icon-size + $alert-icon-gap + units($theme-alert-padding-x)
      );
    }
  }
}

.usa-alert--no-icon {
  @include alert-styles-no-icon;

  .usa-alert__heading,
  .usa-alert__text {
    @if $theme-alert-align-with-site-alert == true {
      padding-left: 0 !important;
    } @else {
      padding-left: units($theme-alert-padding-x) !important;
    }
  }
}

.usa-alert--validation {
  .usa-checklist {
    margin-top: units(2);
  }
}
